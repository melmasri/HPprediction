% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_clean.R
\name{network_clean_single}
\alias{network_clean_single}
\title{A function to clean the network and tree:}
\usage{
network_clean_single(
  Z,
  tree = NULL,
  model.type = c("full", "distance", "affinity"),
  normalize = TRUE,
  ...
)
}
\arguments{
\item{Z}{bipartite interaction matrix. Rows should correspond to species in the distance/tree. There should be no empty columns.}

\item{tree}{'phylo' object, or an symmetric non-negative matrix of pairwise distance between the rows of Z}

\item{model.type}{Indicates the model to use: one of 'full', 'distance', 'affinity'}

\item{normalize}{logical whether to normalize the \code{tree} by maximum distance. (Default is TRUE).}
}
\value{
Returns a list of the cleaned Z and distance objects
}
\description{
- converts Z to binary
- removes empty columns from Z
- confirms tree is a phylo object when using full or distance models
- removes tree tips that do not exist in the rows of Z
- removes the rows of Z with no corresponding tips in the tree
- orders the rows of Z according to the cophenetic function
}
\examples{

# Simluate a tree and Z matrix
\dontrun{
tree <- rcoal(50)
Z <- matrix(rbinom(50*200, 1, 0.01), nrow=50, ncol=200)
Z <- Z[,colSums(Z)>0]
rownames(Z) <- tree$tip.label

# Clean the network and tree
out <- network_clean(Z, tree, model='full')
str(out)
}
}
